!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/nidionis/fractol/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
ARROW_DOWN	include/fractol.h	/^# define ARROW_DOWN /;"	d
ARROW_LEFT	include/fractol.h	/^# define ARROW_LEFT /;"	d
ARROW_RIGHT	include/fractol.h	/^# define ARROW_RIGHT /;"	d
ARROW_UP	include/fractol.h	/^# define ARROW_UP /;"	d
BLUE	include/fractol.h	/^# define BLUE /;"	d
BPP	include/fractol.h	/^# define BPP /;"	d
COLOR_STEP	include/fractol.h	/^# define COLOR_STEP /;"	d
DEFAULT_ITER_MAX	include/fractol.h	/^# define DEFAULT_ITER_MAX /;"	d
FRACTOL_H	include/fractol.h	/^# define FRACTOL_H$/;"	d
GREEN	include/fractol.h	/^# define GREEN /;"	d
HEIGHT	include/fractol.h	/^# define HEIGHT /;"	d
JULIA_COEF_I_STEP	include/fractol.h	/^# define JULIA_COEF_I_STEP /;"	d
JULIA_COEF_R_STEP	include/fractol.h	/^# define JULIA_COEF_R_STEP /;"	d
KEY_A	include/fractol.h	/^# define KEY_A /;"	d
KEY_D	include/fractol.h	/^# define KEY_D /;"	d
KEY_E	include/fractol.h	/^# define KEY_E /;"	d
KEY_ESC	include/fractol.h	/^# define KEY_ESC /;"	d
KEY_F	include/fractol.h	/^# define KEY_F /;"	d
KEY_Q	include/fractol.h	/^# define KEY_Q /;"	d
KEY_R	include/fractol.h	/^# define KEY_R /;"	d
KEY_S	include/fractol.h	/^# define KEY_S /;"	d
KEY_W	include/fractol.h	/^# define KEY_W /;"	d
QUALITY_STEP	include/fractol.h	/^# define QUALITY_STEP /;"	d
RED	include/fractol.h	/^# define RED /;"	d
WIDTH	include/fractol.h	/^# define WIDTH /;"	d
ZOOM_STEP	include/fractol.h	/^# define ZOOM_STEP /;"	d
color_coef	include/fractol.h	/^	int			color_coef;$/;"	m	struct:s_param	typeref:typename:int
colors	src/julia.c	/^int colors(t_data *data, int iter)$/;"	f	typeref:typename:int
complex_module	src/ft_complex.c	/^int	complex_module(t_complex z)$/;"	f	typeref:typename:int
complex_scale	src/ft_complex.c	/^t_complex	complex_scale(t_complex z1, double scale)$/;"	f	typeref:typename:t_complex
complex_square_module	src/ft_complex.c	/^unsigned	complex_square_module(t_complex p)$/;"	f	typeref:typename:unsigned
complex_sum	src/ft_complex.c	/^t_complex	complex_sum(t_complex z1, t_complex z2)$/;"	f	typeref:typename:t_complex
draw_pixel	src/ft_pixel.c	/^void	draw_pixel(t_data *data, t_pix pix, int color)$/;"	f	typeref:typename:void
f_fract	include/fractol.h	/^	void		(*f_fract)(t_data *d, t_pix pix);$/;"	m	struct:s_param	typeref:typename:void (*)(t_data * d,t_pix pix)
fractol	src/main.c	/^int	fractol(t_data *data, char **argv)$/;"	f	typeref:typename:int
ft_random	src/julia.c	/^double	ft_random(int n, int a, int b)$/;"	f	typeref:typename:double
help_msg	src/main.c	/^static void	help_msg(void)$/;"	f	typeref:typename:void	file:
i	include/fractol.h	/^	double	i;$/;"	m	struct:s_complex	typeref:typename:double
img	include/fractol.h	/^	mlx_image_t			*img;$/;"	m	struct:s_data	typeref:typename:mlx_image_t *
init_data	src/main.c	/^void	init_data(t_data *data, char **argv)$/;"	f	typeref:typename:void
iter_max	include/fractol.h	/^	int			iter_max;$/;"	m	struct:s_param	typeref:typename:int
julia_coef	include/fractol.h	/^	t_complex	julia_coef;$/;"	m	struct:s_param	typeref:typename:t_complex
julia_iter	src/ft_render.c	/^int	julia_iter(t_data *data, t_complex c)$/;"	f	typeref:typename:int
loops	src/main.c	/^int	loops(t_data *data)$/;"	f	typeref:typename:int
main	src/main.c	/^int	main(int argc, char *argv[])$/;"	f	typeref:typename:int
mlx	include/fractol.h	/^	t_mlx				*mlx;$/;"	m	struct:s_data	typeref:typename:t_mlx *
my_keyhook	src/ft_keyhooks.c	/^void	my_keyhook(mlx_key_data_t keydata, void *data)$/;"	f	typeref:typename:void
my_scrollhook	src/ft_keyhooks.c	/^void my_scrollhook(double xdelta, double ydelta, void *data)$/;"	f	typeref:typename:void
offset	include/fractol.h	/^	t_pix		offset;$/;"	m	struct:s_param	typeref:typename:t_pix
other_keyhooks	src/ft_keyhooks.c	/^void	other_keyhooks(mlx_key_data_t keydata, void *data)$/;"	f	typeref:typename:void
param	include/fractol.h	/^	struct s_param		*param;$/;"	m	struct:s_data	typeref:struct:s_param *
pixel_to_complex	src/ft_pixel.c	/^t_complex	pixel_to_complex(t_data *data, t_pix p)$/;"	f	typeref:typename:t_complex
prepare_next_frame	src/ft_render.c	/^void	prepare_next_frame(t_data *data)$/;"	f	typeref:typename:void
r	include/fractol.h	/^	double	r;$/;"	m	struct:s_complex	typeref:typename:double
render_julia	src/julia.c	/^void render_julia(t_data *data, t_pix pix)$/;"	f	typeref:typename:void
resize_win	src/ft_keyhooks.c	/^void resize_win(int width, int height, void *data)$/;"	f	typeref:typename:void
s_complex	include/fractol.h	/^typedef struct s_complex$/;"	s
s_data	include/fractol.h	/^typedef struct s_data$/;"	s
s_param	include/fractol.h	/^typedef struct s_param $/;"	s
s_param	include/fractol.h	/^typedef struct s_parami s_param;$/;"	t	typeref:struct:s_parami
s_pix	include/fractol.h	/^typedef struct s_pix$/;"	s
set_complex	src/ft_complex.c	/^void	set_complex(t_complex *z, double r, double i)$/;"	f	typeref:typename:void
set_pix	src/ft_pixel.c	/^void	set_pix(t_pix *pix, int x, int y)$/;"	f	typeref:typename:void
t_complex	include/fractol.h	/^}	t_complex;$/;"	t	typeref:struct:s_complex
t_data	include/fractol.h	/^}	t_data;$/;"	t	typeref:struct:s_data
t_mlx	include/fractol.h	/^typedef mlx_t t_mlx;$/;"	t	typeref:typename:mlx_t
t_param	include/fractol.h	/^}	t_param;$/;"	t	typeref:struct:s_param
t_pix	include/fractol.h	/^}	t_pix;$/;"	t	typeref:struct:s_pix
x	include/fractol.h	/^	int	x;$/;"	m	struct:s_pix	typeref:typename:int
y	include/fractol.h	/^	int	y;$/;"	m	struct:s_pix	typeref:typename:int
zoom	include/fractol.h	/^	double		zoom;$/;"	m	struct:s_param	typeref:typename:double
